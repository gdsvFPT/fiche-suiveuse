<!DOCTYPE html>
<html>
<head>
    <title>Fiche Suiveuse de Production</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        body {
            font-family: 'Segoe UI', Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f4f8;
            line-height: 1.6;
        }

        .file-input-container {
            margin: 20px 0;
            padding: 20px;
            border: 2px dashed #a0aec0;
            border-radius: 15px;
            text-align: center;
            background-color: #ffffff;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }

        .file-label {
            display: inline-flex;
            align-items: center;
            padding: 12px 25px;
            background-color: #4299e1;
            color: white;
            cursor: pointer;
            border-radius: 8px;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

        .file-label:hover {
            background-color: #3182ce;
        }

        #formContent {
            margin-top: 30px;
            display: none;
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);
        }

        th, td {
            border: 1px solid #e2e8f0;
            padding: 12px 15px;
            text-align: left;
            min-width: 120px;
        }

        th {
            background-color: #4299e1;
            color: white;
            font-weight: 600;
        }

        input, select, textarea {
            width: 100%;
            padding: 10px 12px;
            box-sizing: border-box;
            border: 1px solid #cbd5e0;
            border-radius: 6px;
            font-size: 14px;
            background-color: #f7fafc;
            transition: border-color 0.3s ease;
        }

        input:focus, textarea:focus {
            outline: none;
            border-color: #4299e1;
            box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.2);
        }

        .add-btn {
            background-color: #48bb78;
            color: white;
            border: none;
            padding: 8px 15px;
            cursor: pointer;
            border-radius: 6px;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

        .remove-btn {
            background-color: #f56565;
            color: white;
            border: none;
            padding: 8px 15px;
            cursor: pointer;
            border-radius: 6px;
            font-size: 16px;
            transition: background-color 0.3s ease;
            margin-left: 5px;
        }

        .add-btn:hover {
            background-color: #38a169;
        }

        .remove-btn:hover {
            background-color: #e53e3e;
        }

        .save-btn, .reset-btn {
            margin-top: 25px;
            padding: 12px 25px;
            font-size: 16px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: transform 0.2s ease;
        }

        .save-btn {
            background-color: #4299e1;
            color: white;
        }

        .save-btn:hover {
            background-color: #3182ce;
        }

        .reset-btn {
            background-color: #f56565;
            color: white;
            margin-left: 15px;
        }

        .reset-btn:hover {
            background-color: #e53e3e;
        }

        #fileName {
            margin-top: 15px;
            color: #718096;
            font-size: 14px;
        }

        .form-header {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 25px;
        }

        [readonly] {
            background-color: #edf2f7;
        }

        @media (max-width: 768px) {
            body {
                padding: 15px;
            }

            .form-header {
                grid-template-columns: 1fr;
            }

            table {
                display: block;
                overflow-x: auto;
                -webkit-overflow-scrolling: touch;
            }

            th, td {
                min-width: 150px;
                padding: 10px 12px;
            }

            input, select, textarea {
                font-size: 16px;
                padding: 12px;
            }

            .file-label {
                width: 100%;
                justify-content: center;
            }
        }

        th:nth-child(2), td:nth-child(2) {
            min-width: 140px;
            background-color: #ebf8ff;
        }
    </style>
</head>
<body>

<div id="formContent">
    <div class="form-header">
        <div style="margin-bottom:15px;">
            <label>Superviseur : </label>
            <input type="text" id="superviseur" list="superviseurList" autocomplete="off" style="width: 100%; padding: 12px;">
            <datalist id="superviseurList"></datalist>
        </div>
        <div>
            <label>Date : </label>
            <input type="text" id="dateJour" readonly style="width: 100%; padding: 12px;">
        </div>
    </div>

    <table id="mainTable">
        <thead>
            <tr>
                <th>Atelier</th>
                <th>Superviseur</th>
                <th>N° d'affaire *</th>
                <th>Désignation de projet *</th>
                <th>Opération</th>
                <th>Intervenant</th>
                <th>Quantité</th>
                <th>Date</th>
                <th>H. Début</th>
                <th>Pause (min)</th>
                <th>H. Fin</th>
                <th>Total H</th>
                <th>Observation(s)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <div style="margin-top: 20px;">
        <button class="save-btn" onclick="exportToExcel()">Enregistrer</button>
        <button class="reset-btn" onclick="resetForm()">Réinitialiser</button>
    </div>
</div>

<datalist id="affaireList"></datalist>
<datalist id="operationList"></datalist>
<datalist id="intervenantList"></datalist>
<datalist id="designationList"></datalist>

<script>
const DEPLOYMENT_URL = "https://script.google.com/macros/s/AKfycbz0fWACJWgbU5_1wya4VYZv4YO7WZxuK9hRryJdJqNl/dev";
let excelData = {
    dataFS: [],
    currentAtelier: null,
    currentSuperviseur: null
};

async function loadGoogleSheetData() {
    try {
        const response = await fetch(DEPLOYMENT_URL);
        const data = await response.json();
        
        excelData.dataFS = data.slice(1).filter(row => row && row.length >= 4);
        
        const superviseurs = [...new Set(excelData.dataFS.map(row => row[1]?.toString().trim()).filter(Boolean))];
        $('#superviseurList').html(superviseurs.map(s => `<option value="${s}">`).join(''));

        initForm();
        $('#formContent').show();
    } catch (error) {
        alert("Erreur de chargement : " + error.message);
    }
}

function initForm() {
    $('#mainTable tbody').empty();
    addInitialRows(2);

    $('#superviseur').off('input').on('input', function() {
        const selectedSuperviseur = this.value.trim();
        const selectedRow = excelData.dataFS.find(row => row[1]?.toString().trim() === selectedSuperviseur);
        
        if (selectedRow) {
            excelData.currentAtelier = selectedRow[3]?.toString().trim();
            excelData.currentSuperviseur = selectedSuperviseur;
            $('input[data-col="atelier"]').val(excelData.currentAtelier).prop('readonly', true);
        }
    });
}

function calculateTotalHours(row) {
    const hdebut = row.find('input[data-col="hdebut"]').val();
    const hfin = row.find('input[data-col="hfin"]').val();
    const pause = parseInt(row.find('select[data-col="pause"]').val()) || 0;

    if (hdebut && hfin) {
        const [debutHours, debutMinutes] = hdebut.split(':').map(Number);
        const [finHours, finMinutes] = hfin.split(':').map(Number);
        
        const totalMinutes = (finHours * 60 + finMinutes) - (debutHours * 60 + debutMinutes) - pause;
        const decimalHours = (totalMinutes / 60).toFixed(2);
        
        row.find('input[data-col="totalh"]').val(decimalHours);
    }
}

function addInitialRows(count) {
    for (let i = 0; i < count; i++) addNewRow();
}

function addNewRow() {
    const today = new Date().toISOString().split('T')[0];
    const newRow = `
    <tr>
        <td><input data-col="atelier" readonly></td>
        <td>${excelData.currentSuperviseur || ''}</td>
        <td><input data-col="affaire" list="affaireList"></td>
        <td><input data-col="designation" list="designationList"></td>
        <td><input data-col="operation" list="operationList" disabled></td>
        <td><input data-col="intervenant" list="intervenantList"></td>
        <td><input data-col="quantite" type="number"></td>
        <td><input data-col="date" type="date" value="${today}"></td>
        <td><input data-col="hdebut" type="time"></td>
        <td>
            <select data-col="pause">
                <option value="60" selected>60</option>
                <option value="40">40</option>
                <option value="30">30</option>
                <option value="20">20</option>
                <option value="15">15</option>
                <option value="0">0</option>
            </select>
        </td>
        <td><input data-col="hfin" type="time"></td>
        <td><input data-col="totalh" readonly></td>
        <td><textarea data-col="observations" rows="2"></textarea></td>
        <td>
            <button class="add-btn" type="button">+</button>
            <button class="remove-btn" type="button">-</button>
        </td>
    </tr>`;
    $('#mainTable tbody').append(newRow);
    updateRemoveButtons();
}

function updateRemoveButtons() {
    const rows = $('#mainTable tbody tr');
    rows.each(function(index) {
        const isLast = index === rows.length - 1;
        $(this).find('.remove-btn').toggle(!isLast);
    });
}

$(document).on('click', '.add-btn', function() {
    const originalRow = $(this).closest('tr');
    const newRow = originalRow.clone(true);
    
    newRow.find('input[data-col], select[data-col]').each(function() {
        const col = $(this).data('col');
        if(col === 'intervenant') $(this).val('');
        if(col === 'operation') $(this).prop('disabled', true);
        if(!$(this).prop('readonly') && col !== 'intervenant') $(this).val(originalRow.find(`[data-col="${col}"]`).val());
    });

    newRow.find('[data-col="pause"]').val('60');
    originalRow.after(newRow);
    updateRemoveButtons();
});

$(document).on('click', '.remove-btn', function() {
    if ($('#mainTable tbody tr').length > 1) {
        $(this).closest('tr').remove();
        updateRemoveButtons();
    }
});

async function exportToExcel() {
    if (!excelData.currentSuperviseur) {
        alert("Veuillez sélectionner un superviseur !");
        return;
    }

    const allRows = $('#mainTable tbody tr');
    const dataToSend = [];

    allRows.each(function(index) {
        const rowData = [
            $(this).find('[data-col="atelier"]').val(),
            excelData.currentSuperviseur,
            $(this).find('[data-col="affaire"]').val(),
            $(this).find('[data-col="designation"]').val(),
            $(this).find('[data-col="operation"]').val(),
            $(this).find('[data-col="intervenant"]').val(),
            $(this).find('[data-col="quantite"]').val(),
            $(this).find('[data-col="date"]').val(),
            $(this).find('[data-col="hdebut"]').val(),
            $(this).find('[data-col="pause"]').val(),
            $(this).find('[data-col="hfin"]').val(),
            $(this).find('[data-col="totalh"]').val(),
            $(this).find('[data-col="observations"]').val() || ''
        ];
        dataToSend.push(rowData);
    });

    try {
        const response = await fetch(DEPLOYMENT_URL, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(dataToSend)
        });
        
        if (response.ok) {
            alert('✅ Données enregistrées avec succès !');
            resetForm();
        }
    } catch (error) {
        alert('Erreur : ' + error.message);
    }
}

function resetForm() {
    if (confirm("Voulez-vous vraiment réinitialiser le formulaire ?")) {
        $('#formContent').hide();
        $('#superviseur').val('');
        $('#mainTable tbody').empty();
        excelData = { dataFS: [], currentAtelier: null, currentSuperviseur: null };
        addInitialRows(2);
        updateRemoveButtons();
    }
}

$(document).ready(function() {
    $('#dateJour').val(new Date().toLocaleDateString('fr-FR'));
    loadGoogleSheetData();
    $(document).on('change', 'input[data-col="hdebut"], input[data-col="hfin"], select[data-col="pause"]', function() {
        calculateTotalHours($(this).closest('tr'));
    });
});
</script>
</body>
</html>